--- openpetra.js.before/setup/petra0300/linuxserver/postgresql/debian/openpetraorg-server.sh	2014-08-29 15:39:26.000000000 +0200
+++ openpetra.js/setup/petra0300/linuxserver/postgresql/debian/openpetraorg-server.sh	2014-08-29 15:37:59.000000000 +0200
@@ -3,7 +3,7 @@
 # description: Starts and stops the openpetraorg server running with Mono
 #
 ### BEGIN INIT INFO
-# Provides:             openpetraorg
+# Provides:             openpetra-js
 # Required-Start:
 # Required-Stop:
 # Should-Start:
@@ -22,18 +22,20 @@
 
 if [ ! -d $OpenPetraOrgPath ]
 then
-  export mono=mono
   export OpenPetraOrgPath=/usr/local/openpetraorg
-  export CustomerName=DefaultTOREPLACE
-  export OPENPETRA_LocationKeyFile=
+  export userName=openpetra
   export OPENPETRA_RDBMSType=postgresql
-  export OPENPETRA_DBPWD=TOBESETBYINSTALLER
   export OPENPETRA_DBHOST=localhost
-  export OPENPETRA_DBPORT=5432
+  export OPENPETRA_DBPWD=@RandomDBPassword@
   export OPENPETRA_DBUSER=petraserver
   export OPENPETRA_DBNAME=openpetra
-  export OPENPETRA_PORT=9000
+  export OPENPETRA_DBPORT=5432
+  export OPENPETRA_PORT=@HostedPort@
+  export POSTGRESQLVERSION=@PostgreSQL.Version@
   export backupfile=$OpenPetraOrgPath/backup30/backup-`date +%Y%m%d`.sql.gz
+  export mono_path=/opt/mono-openpetra
+  export FASTCGI_MONO_SERVER=$mono_path/bin/fastcgi-mono-server4
+  export mono=$mono_path/bin/mono
 fi
 
 # Override defaults from /etc/sysconfig/openpetra if file is present
@@ -42,33 +44,36 @@
 if [ "$2" != "" ]
 then
   backupfile=$2
+  useremail=$2
+  ymlgzfile=$2
 fi
 
 . /lib/lsb/init-functions
 
 # start the openpetraorg server
 start() {
-    log_daemon_msg "Starting OpenPetra.org server for $CustomerName"
-
-    cd $OpenPetraOrgPath/bin30
-    parameters="-Server.DBPassword:PG_OPENPETRA_DBPWD -Server.DBUserName:$OPENPETRA_DBUSER -Server.DBName:$OPENPETRA_DBNAME -Server.DBPort:$OPENPETRA_DBPORT -Server.DBHostOrFile:$OPENPETRA_DBHOST -Server.Port:$OPENPETRA_PORT -Server.RDBMSType:$OPENPETRA_RDBMSType -Server.ChannelEncryption.PrivateKeyfile:$OPENPETRA_LocationPrivateKeyFile"
-    su $userName -c "$mono --runtime=v4.0 --server PetraServerConsole.exe -C:$OpenPetraOrgPath/etc30/PetraServerConsole.config $parameters -RunWithoutMenu:true &> /dev/null &"
-    # in order to see if the server started successfully, wait a few seconds and then show the end of the log file
-    sleep 5
-    tail $OpenPetraOrgPath/log30/Server.log
+    log_daemon_msg "Starting OpenPetra.org server"
 
-    # TODO: check Server.log for errors
-    #status=´ps xaf | grep $CustomerName´
+    su $userName -c ". $mono_path/env.sh; $FASTCGI_MONO_SERVER /socket=tcp:127.0.0.1:$OPENPETRA_PORT /applications=/:/var/www/openpetra /appconfigfile=/home/$userName/etc/PetraServerConsole.config&"
     status=0
     log_end_msg $status
 }
 
 # stop the openpetraorg server
 stop() {
-    log_daemon_msg "Stopping OpenPetra.org server for $CustomerName"
+    log_daemon_msg "Stopping OpenPetra.org server"
+    cd $OpenPetraOrgPath/bin30
+    
+    su $userName -c ". $mono_path/env.sh; $mono --runtime=v4.0 --server PetraServerAdminConsole.exe -C:/home/$userName/etc/PetraServerAdminConsole.config -Command:Stop"
+    
+    status=0
+    log_end_msg $status
+}
+
+# load a new database from a yml.gz file. this will overwrite the current database!
+loadYmlGz() {
     cd $OpenPetraOrgPath/bin30
-    parameters="-Server.Port:$OPENPETRA_PORT -Server.ChannelEncryption.PublicKeyfile:$OPENPETRA_LocationPublicKeyFile"
-    su $userName -c "$mono --runtime=v4.0 --server PetraServerAdminConsole.exe -C:$OpenPetraOrgPath/etc30/PetraServerAdminConsole.config $parameters -Command:Stop"
+    su $userName -c ". $mono_path/env.sh; $mono --runtime=v4.0 --server PetraServerAdminConsole.exe -C:/home/$userName/etc/PetraServerAdminConsole.config -Command:LoadYmlGz -YmlGzFile:$ymlgzfile"
     status=0
     log_end_msg $status
 }
@@ -76,8 +81,7 @@
 # display a menu to check for logged in users etc
 menu() {
     cd $OpenPetraOrgPath/bin30
-    parameters="-Server.Port:$OPENPETRA_PORT -Server.ChannelEncryption.PublicKeyfile:$OPENPETRA_LocationPublicKeyFile"
-    su $userName -c "$mono --runtime=v4.0 --server PetraServerAdminConsole.exe -C:$OpenPetraOrgPath/etc30/PetraServerAdminConsole.config $parameters"
+    su $userName -c ". $mono_path/env.sh; $mono --runtime=v4.0 --server PetraServerAdminConsole.exe -C:/home/$userName/etc/PetraServerAdminConsole.config"
 }
 
 # backup the postgresql database
@@ -102,8 +106,6 @@
     echo `date` "Start restoring from " $backupfile
     echo "dropping tables and sequences..."
 
-    #echo $OPENPETRA_DBHOST:$OPENPETRA_DBPORT:$OPENPETRA_DBNAME:$OPENPETRA_DBUSER:$OPENPETRA_DBPWD > ~/.pgpass
-
     delCommand="SELECT 'DROP TABLE ' || n.nspname || '.' || c.relname || ' CASCADE;' FROM pg_catalog.pg_class AS c LEFT JOIN pg_catalog.pg_namespace AS n ON n.oid = c.relnamespace WHERE relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'pg_toast') AND pg_catalog.pg_table_is_visible(c.oid)" 
     su $userName -c "psql -t -h $OPENPETRA_DBHOST -p $OPENPETRA_DBPORT -U $OPENPETRA_DBUSER $OPENPETRA_DBNAME -c \"$delCommand\" > /tmp/deleteAllTables.sql"
 
@@ -124,9 +126,9 @@
     echo $backupfile|grep -qE '\.gz$'
     if [ $? -eq 0 ]
     then
-        su $userName -c "cat $backupfile | gunzip | psql -h $OPENPETRA_DBHOST -p $OPENPETRA_DBPORT -U $OPENPETRA_DBUSER $OPENPETRA_DBNAME -q > $OpenPetraOrgPath/log30/pgload.log"
+        su $userName -c "cat $backupfile | gunzip | psql -h $OPENPETRA_DBHOST -p $OPENPETRA_DBPORT -U $OPENPETRA_DBUSER $OPENPETRA_DBNAME -q > /home/$userName/log/pgload.log"
     else
-        su $userName -c "psql -h $OPENPETRA_DBHOST -p $OPENPETRA_DBPORT -U $OPENPETRA_DBUSER $OPENPETRA_DBNAME -q -f $backupfile > $OpenPetraOrgPath/log30/pgload.log"
+        su $userName -c "psql -h $OPENPETRA_DBHOST -p $OPENPETRA_DBPORT -U $OPENPETRA_DBUSER $OPENPETRA_DBNAME -q -f $backupfile > /home/$userName/log/pgload.log"
     fi
 
     echo "enabling indexes and constraints..."
@@ -135,15 +137,90 @@
     echo `date` "Finished!"
 }
 
-createdb() {
+init() {
     echo "creating database..."
-    su postgres -c "psql -q -p $OPENPETRA_DBPORT -c \"CREATE USER \\\"$OPENPETRA_DBUSER\\\" PASSWORD '$OPENPETRA_DBPWD'\""
-    su postgres -c "createdb -p $OPENPETRA_DBPORT -T template0 -O $OPENPETRA_DBUSER $OPENPETRA_DBNAME"
-}
+    service postgresql-$POSTGRESQLVERSION initdb
+    service postgresql-$POSTGRESQLVERSION start
+    chkconfig postgresql-$POSTGRESQLVERSION on
+
+    if [ ! "`cat /var/lib/pgsql/$POSTGRESQLVERSION/data/pg_hba.conf | grep '^host  '$OPENPETRA_DBNAME' '$OPENPETRA_DBUSER'  ::1/128   md5'`" ]; then
+       echo "local  $OPENPETRA_DBNAME $OPENPETRA_DBUSER   md5" > /var/lib/pgsql/$POSTGRESQLVERSION/data/pg_hba.conf.new
+       echo "host  $OPENPETRA_DBNAME $OPENPETRA_DBUSER  ::1/128   md5" >> /var/lib/pgsql/$POSTGRESQLVERSION/data/pg_hba.conf.new
+       echo "host  $OPENPETRA_DBNAME $OPENPETRA_DBUSER  127.0.0.1/32   md5" >> /var/lib/pgsql/$POSTGRESQLVERSION/data/pg_hba.conf.new
+       cat /var/lib/pgsql/$POSTGRESQLVERSION/data/pg_hba.conf >> /var/lib/pgsql/$POSTGRESQLVERSION/data/pg_hba.conf.new
+       mv -f /var/lib/pgsql/$POSTGRESQLVERSION/data/pg_hba.conf.new /var/lib/pgsql/$POSTGRESQLVERSION/data/pg_hba.conf
+       /etc/init.d/postgresql-$POSTGRESQLVERSION restart
+       su postgres -c "psql -q -p $OPENPETRA_DBPORT -c \"CREATE USER \\\"$OPENPETRA_DBUSER\\\" PASSWORD '$OPENPETRA_DBPWD'\""
+       su postgres -c "createdb -p $OPENPETRA_DBPORT -T template0 -O $OPENPETRA_DBUSER $OPENPETRA_DBNAME"
+    else
+       # there has already been an installation.
+       service openpetra stop
+    fi
 
-init() {
-    export backupfile=$OpenPetraOrgPath/db30/demodata-PostgreSQL.sql
-    restore
+    useradd --home /home/$userName $userName
+    mkdir -p /home/$userName/log
+    mkdir -p /home/$userName/tmp
+    mkdir -p /home/$userName/etc
+    hostname=`hostname`
+    # copy config files (server, serveradmin.config) to etc, with adjustments
+    cat $OpenPetraOrgPath/etc30/PetraServerConsole.config \
+       | sed -e "s/OPENPETRA_DBHOST/$OPENPETRA_DBHOST/" \
+       | sed -e "s/OPENPETRA_DBUSER/$OPENPETRA_DBUSER/" \
+       | sed -e "s/OPENPETRA_DBNAME/$OPENPETRA_DBNAME/" \
+       | sed -e "s/OPENPETRA_DBPORT/$OPENPETRA_DBPORT/" \
+       | sed -e "s/USERNAME/$userName/" \
+       > /home/$userName/etc/PetraServerConsole.config
+    cat $OpenPetraOrgPath/etc30/PetraServerAdminConsole.config \
+       | sed -e "s/DOMAINNAME/`hostname`/" \
+       | sed -e "s/USERNAME/$userName/" \
+       | sed -e "s/OPENPETRA_PORT/$OPENPETRA_PORT/" \
+       > /home/$userName/etc/PetraServerAdminConsole.config
+
+    if [ ! "`cat /home/$userName/.pgpass | grep '^*:'$OPENPETRA_DBPORT':'$OPENPETRA_DBNAME':'$OPENPETRA_DBUSER':'`" ]; then
+      echo "*:$OPENPETRA_DBPORT:$OPENPETRA_DBNAME:$OPENPETRA_DBUSER:$OPENPETRA_DBPWD" >> /home/$userName/.pgpass
+    fi
+    chown -R $userName:$userName /home/$userName
+    chmod 600 /home/$userName/.pgpass
+    chown $userName /home/$userName/.pgpass
+
+    echo "creating tables..."
+    su $userName -c "psql -h $OPENPETRA_DBHOST -p $OPENPETRA_DBPORT -U $OPENPETRA_DBUSER $OPENPETRA_DBNAME -q -f $OpenPetraOrgPath/db30/createtables-PostgreSQL.sql"
+    echo "enabling indexes and constraints..."
+    su $userName -c "psql -h $OPENPETRA_DBHOST -p $OPENPETRA_DBPORT -U $OPENPETRA_DBUSER $OPENPETRA_DBNAME -q -f $OpenPetraOrgPath/db30/createconstraints-PostgreSQL.sql"
+
+    # configure lighttpd
+    cat > /etc/lighttpd/vhosts.d/openpetra$OPENPETRA_PORT.conf <<FINISH
+\$HTTP["url"] =~ "^/openpetra$OPENPETRA_PORT" {
+  var.server_name = "openpetra$OPENPETRA_PORT"
+
+  server.name = "$hostname/openpetra$OPENPETRA_PORT"
+
+  server.document-root = "/var/www/openpetra"
+
+  fastcgi.server = (
+        "/openpetra$OPENPETRA_PORT" => ((
+                "host" => "127.0.0.1",
+                "port" => $OPENPETRA_PORT,
+                "check-local" => "disable"
+        ))
+  )
+}
+FINISH
+    sed -i 's~"mod_fastcgi",~#"mod_fastcgi",~g' /etc/lighttpd/modules.conf
+    sed -i 's~server.modules = (~server.modules = (\n  "mod_fastcgi",~g' /etc/lighttpd/modules.conf
+    sed -i 's/server.use-ipv6 = "enable"/server.use-ipv6 = "disable"/g' /etc/lighttpd/lighttpd.conf
+    sed -i 's/server.max-connections = 1024/server.max-connections = 512/g' /etc/lighttpd/lighttpd.conf
+    sed -i 's~#include_shell "cat /etc/lighttpd/vhosts\.d/\*\.conf"~include_shell "cat /etc/lighttpd/vhosts.d/*.conf"~g' /etc/lighttpd/lighttpd.conf
+    service lighttpd restart
+    chkconfig lighttpd on
+    chkconfig openpetra on
+    service openpetra start
+    ymlgzfile=$OpenPetraOrgPath/db30/demo.yml.gz
+    if [ ! -f $ymlgzfile ]
+    then
+      ymlgzfile=$OpenPetraOrgPath/db30/base.yml.gz
+    fi
+    loadYmlGz
 }
 
 case "$1" in
@@ -166,11 +243,14 @@
     init)
         init
         ;;
+    loadYmlGz)
+        loadYmlGz
+        ;;
     menu)
         menu
         ;;
     *)
-        echo "Usage: $0 {start|stop|restart|menu|backup|restore|createdb|init}"
+        echo "Usage: $0 {start|stop|restart|menu|backup|restore|init|loadYmlGz}"
         exit 1
         ;;
 esac
